if (typeof(twitterAccount3) != "string") var twitterAccount3 = "";
if (typeof(tweetThisText3) != "string" || tweetThisText3 === "") var tweetThisText3 = document.title + " " + document.URL;
if (typeof(tweetThisText3) != "string" || tweetThisText3 === "") var tweetThisText3 = document.title + " " + document.URL;
if (typeof(showTweet3) != "boolean") var showTweet3 = false;
var tweetthislink3 = null;
if (typeof(otherPageOrFeed3) != "string" || otherPageOrFeed3 === "") var otherPageOrFeed3 = false;
var birdSprite3 = "/themes/v1/assets/img/bs01.png";
var twitterfeedreader3 = "";
var hyperlinkStyle3 = "color:#27b;text-decoration:none;";
var birdSpeed3 = 12;
var birdSpaceVertical3 = 16;
var birdSetUp3 = 3;
var spriteWidth3 = 64;
var spriteHeight3 = 64;
var spriteAniSpeed3 = 72;
var spriteAniSpeedSlow3  = Math.round(spriteAniSpeed3 * 1.75);
var targetElems3  = new Array("img", "hr", "input", "textarea", "button", "select", "table", "td", "div", "ul", "ol", "li", "h1", "h2", "h3", "h4", "p", "code", "object", "div", "b", "strong", "span");
var neededElems4random3  = 10;
var minElemWidth3  = Math.round(spriteWidth3 / 3);
var scareTheBirdMouseOverTimes3  = 4;
var scareTheBirdTime3  = 1000;
var showOnMobile3  = false;
var birdIsFlying3  = false;
var scrollPos3  = 0;
var windowHeight3 = getWindowHeight3();
var windowWidth3 = getWindowWidth3();
if (windowHeight3 <= spriteHeight3 + 3 * birdSpaceVertical3) windowHeight3 = spriteHeight3 + 3 * birdSpaceVertical3 + 1;
if (windowWidth3 <= spriteWidth3) windowWidth3 = spriteWidth3 + 1;
var birdPosX3 = Math.round(Math.random() * (windowWidth3 - spriteWidth3 + 200) - 300);
var birdPosY3 = -2 * spriteHeight3;
var timeoutAnimation3 = false;
var timeoutFlight3 = false;
var showButtonsTimeout3 = null;
var hideButtonsTimeout3 = null;
var scareTheBirdLastTime3 = 0;
var scareTheBirdCount3 = 3;
function tripleflapInit3(reallystart3) {
    if (typeof(reallystart3) == "undefined") {
        window.setTimeout("tripleflapInit3(1)", 350);
        return;
    }
    if (!showOnMobile3  && typeof(navigator.userAgent) == "string" && is_mobile3(navigator.userAgent)) {
        return;
    }
    if (!is_utf83(tweetThisText3)) tweetThisText3 = utf8_encode3(tweetThisText3);
    var tweetthislink3 = "http://kapitalsugurta.uz/" + escape(tweetThisText3);
    if (twitterAccount3 === "") showTweet3 = false;
    var accountURL3 = (twitterAccount3 !== "") ? "http://kapitalsugurta.uz/" + twitterAccount3 : ((otherPageOrFeed3 !== false) ? otherPageOrFeed3 : "http://kapitalsugurta.uz/");
    var tBird3 = document.createElement("div");
    tBird3.setAttribute("id", "tBird3");
    tBird3.setAttribute("data", accountURL3);
    tBird3.style.display = "block";
    tBird3.style.position = "absolute";
    tBird3.style.left = birdPosX3 + "px";
    tBird3.style.top = birdPosY3 + "px";
    tBird3.style.width = spriteWidth3 + "px";
    tBird3.style.height = spriteHeight3 + "px";
    tBird3.style.background = "url('" + birdSprite3 + "') no-repeat transparent";
    tBird3.style.backgroundPosition = "-0px -0px";
    tBird3.style.zIndex = "947";
    tBird3.onmouseover = function() {
        scareTheBird3();
        showButtonsTimeout3 = window.setTimeout("showButtons3(0," + windowWidth3 + "," + windowHeight3 + ")", 400);
        window.clearTimeout(hideButtonsTimeout3);
    };
    tBird3.onmouseout = function() {
        hideButtonsTimeout3 = window.setTimeout("hideButtons3()", 50);
    };
    document.body.appendChild(tBird3);
    var tBirdLtweet3 = document.createElement("a");
    tBirdLtweet3.setAttribute("id", "tBirdLtweet3");
    tBirdLtweet3.setAttribute("data", tweetthislink3);
    tBirdLtweet3.setAttribute("title", "tweet this");
    tBirdLtweet3.style.display = "none";
    tBirdLtweet3.style.position = "absolute";
    tBirdLtweet3.style.left = "0px";
    tBirdLtweet3.style.top = "-100px";
    tBirdLtweet3.style.background = "url('" + birdSprite3 + "') no-repeat transparent";
    tBirdLtweet3.style.opacity = "0";
    tBirdLtweet3.style.filter = "alpha(opacity=0)";
    tBirdLtweet3.style.backgroundPosition = "-64px -0px";
    tBirdLtweet3.style.width = "58px";
    tBirdLtweet3.style.height = "30px";
    tBirdLtweet3.style.zIndex = "951";
    tBirdLtweet3.onmouseover = function() {
        window.clearTimeout(hideButtonsTimeout3);
    };
    tBirdLtweet3.onmouseout = function() {
        hideButtonsTimeout3 = window.setTimeout("hideButtons3()", 50);
    };
    document.body.appendChild(tBirdLtweet3);
    var tBirdLfollow3 = tBirdLtweet3.cloneNode(false);
    tBirdLfollow3.setAttribute("id", "tBirdLfollow3");
    tBirdLfollow3.setAttribute("data", accountURL3);
    tBirdLfollow3.setAttribute("title", "follow " + (twitterAccount3 ? "@" + twitterAccount3 : "me"));
    tBirdLfollow3.style.backgroundPosition = "-64px -30px";
    tBirdLfollow3.style.width = "58px";
    tBirdLfollow3.style.height = "30px";
    tBirdLfollow3.style.zIndex = "953";
    tBirdLfollow3.onmouseover = function() {
        window.clearTimeout(hideButtonsTimeout3);
    };
    tBirdLfollow3.onmouseout = function() {
        hideButtonsTimeout3 = window.setTimeout("hideButtons3()", 50);
    };
    document.body.appendChild(tBirdLfollow3);
    if (showTweet3 === true) {
        var tBirdStatxLow3 = document.createElement("div");
        tBirdStatxLow3.setAttribute("id", "tBirdStatxLow3");
        tBirdStatxLow3.style.display = "none";
        tBirdStatxLow3.style.position = "absolute";
        tBirdStatxLow3.style.left = "0px";
        tBirdStatxLow3.style.top = "-100px";
        tBirdStatxLow3.style.background = "transparent";
        tBirdStatxLow3.style.opacity = "0";
        tBirdStatxLow3.style.filter = "alpha(opacity=0)";
        tBirdStatxLow3.style.width = "193px";
        tBirdStatxLow3.style.zIndex = "955";
        tBirdStatxLow3.onmouseover = function() {
            window.clearTimeout(hideButtonsTimeout3);
        };
        tBirdStatxLow3.onmouseout = function() {
            hideButtonsTimeout3 = window.setTimeout("hideButtons3()", 50);
        };
        var tBirdStatxUpr3 = tBirdStatxLow3.cloneNode(false);
        tBirdStatxUpr3.setAttribute("id", "tBirdStatxUpr3");
        tBirdStatxUpr3.onmouseover = function() {
            window.clearTimeout(hideButtonsTimeout3);
        };
        tBirdStatxUpr3.onmouseout = function() {
            hideButtonsTimeout3 = window.setTimeout("hideButtons3()", 50);
        };
        var tBirdStatxArrLow3 = document.createElement("div");
        tBirdStatxArrLow3.setAttribute("id", "tBirdStatxArrLow3");
        tBirdStatxArrLow3.style.background = "url('" + birdSprite3 + "') no-repeat transparent";
        tBirdStatxArrLow3.style.backgroundPosition = "-64px -50px";
        tBirdStatxArrLow3.style.width = "33px";
        tBirdStatxArrLow3.style.height = "9px";
        tBirdStatxArrLow3.style.margin = "0 0 -1px 56px";
        tBirdStatxArrLow3.style.position = "relative";
        tBirdStatxArrLow3.style.zIndex = "957";
        var tBirdStatxArrUpr3 = tBirdStatxArrLow3.cloneNode(false);
        tBirdStatxArrUpr3.setAttribute("id", "tBirdStatxArrUpr3");
        tBirdStatxArrUpr3.style.backgroundPosition = "-96px -50px";
        tBirdStatxArrUpr3.style.margin = "-1px 0 0 60px";
        var tBirdStatxInLow3 = document.createElement("div");
        tBirdStatxInLow3.setAttribute("id", "tBirdStatxInLow3");
        tBirdStatxInLow3.style.background = "#fbfcfc";
        tBirdStatxInLow3.style.border = "1px solid #555";
        tBirdStatxInLow3.style.MozBorderRadius = "6px";
        tBirdStatxInLow3.style.borderRadius = "6px";
        tBirdStatxInLow3.style.padding = "3px 5px";
        tBirdStatxInLow3.style.fontSize = "11px";
        tBirdStatxInLow3.style.fontFamily = "Arial";
        tBirdStatxInLow3.style.textAlign = "left";
        tBirdStatxInLow3.style.position = "relative";
        tBirdStatxInLow3.style.zIndex = "956";
        tBirdStatxInLow3.innerHTML = "loading...";
        var tBirdStatxInUpr3 = tBirdStatxInLow3.cloneNode(false);
        tBirdStatxInUpr3.setAttribute("id", "tBirdStatxInUpr3");
        tBirdStatxInUpr3.innerHTML = "loading...";
        tBirdStatxLow3.appendChild(tBirdStatxArrLow3);
        tBirdStatxLow3.appendChild(tBirdStatxInLow3);
        tBirdStatxUpr3.appendChild(tBirdStatxInUpr3);
        tBirdStatxUpr3.appendChild(tBirdStatxArrUpr3);
        document.body.appendChild(tBirdStatxLow3);
        document.body.appendChild(tBirdStatxUpr3);
    }
    var timeoutAnimation3 = window.setTimeout("animateSprite3(0,0,0,0,null,true)", spriteAniSpeed3);
    window.onscroll = recheckposition;
    if (showTweet3 === true) loadStatusText3();
    recheckposition3();
}
function animateSprite3(row3, posStart3, posEnd3, count3, speed3, onlySet3) {
    if (typeof(count3) != "number" || count3 > posEnd3 - posStart3) count3 = 3;
    document.getElementById("tBird3").style.backgroundPosition = "-" + Math.round((posStart3 + count3) * spriteWidth3) + "px -" + (spriteHeight3 * row3) + "px";
    if (onlySet3 === true) return;
    if (typeof(speed3) != "number") speed3 = spriteAniSpeed3;
    timeoutAnimation3 = window.setTimeout("animateSprite3(" + row3 + "," + posStart3 + "," + posEnd3 + "," + (count3 + 1) + "," + speed3 + ")", speed3);
}
function animateSpriteAbort3() {
    window.clearTimeout(timeoutAnimation3);
}
function recheckposition3(force3) {
    if (force3 !== true) force3 = false;
    if (birdIsFlying3 ) return false;
    windowHeight3 = getWindowHeight3();
    windowWidth3 = getWindowWidth3();
    if (windowHeight3 <= spriteHeight3 + 3 * birdSpaceVertical3) windowHeight3 = spriteHeight3 + 3 * birdSpaceVertical3 + 1;
    if (windowWidth3 <= spriteWidth3) windowWidth3 = spriteWidth3 + 1;
    if (typeof(window.pageYOffset) == "number") scrollPos3  = window.pageYOffset;
    else if (document.body && document.body.scrollTop) scrollPos3  = document.body.scrollTop;
    else if (document.documentElement && document.documentElement.scrollTop) scrollPos3  = document.documentElement.scrollTop;
    birdPosY3 = parseInt(document.getElementById("tBird3").style.top);
    birdPosX3 = parseInt(document.getElementById("tBird3").style.left);
    if (scrollPos3  + birdSpaceVertical3 >= birdPosY3 || scrollPos3  + windowHeight3 - spriteHeight3 < birdPosY3 || force3) {
        hideButtons3();
        var elemPosis3 = chooseNewTarget3();
        if (elemPosis3.length < 1) {
            var    elemType3 = null;
            var    elemNr3 = null;
            var    elemTop3 = scrollPos3  + Math.round(Math.random() * (windowHeight3 - spriteHeight3));
            var    elemLeft3 = Math.round(Math.random() * (windowWidth3 - spriteWidth3));
            var    elemWidth3 = 0;
        } else {
            var    newTarget3 = elemPosis3[Math.round(Math.random() * (elemPosis3.length - 1))];
            elemType3 = newTarget3[0];
            elemNr3 = newTarget3[1];
            elemTop3 = newTarget3[3];
            elemLeft3 = newTarget3[3];
            elemWidth3 = newTarget3[4];
        }
        var    targetTop3 = elemTop3 - spriteHeight3;
        var    targetLeft3 = Math.round(elemLeft3 - spriteWidth3 / 3 + Math.random() * elemWidth3);
        if (targetLeft3 > windowWidth3 - spriteWidth3 - 34) targetLeft3 = windowWidth3 - spriteWidth3 - 34;
        else if (targetLeft3 < 0) targetLeft3 = 0;
        var    birdIsFlying3  = true;
        flyFromTo3(birdPosX3, birdPosY3, targetLeft3, targetTop3, 0);
    }
}
function chooseNewTarget3() {
    var elemPosis3 = new Array();
    var obergrenze3 = scrollPos3  + spriteHeight3 + birdSpaceVertical3;
    var untergrenze3 = scrollPos3  + windowHeight3 - birdSpaceVertical3;
    for (var ce = 0; ce < targetElems3 .length; ce++) {
        var elemType3 = targetElems3 [ce];
        var sumElem3 = document.getElementsByTagName(elemType3).length;
        for (var cu3 = 0; cu3 < sumElem3; cu3++) {
            var top3 = document.getElementsByTagName(elemType3)[cu3].offsetTop;
            var left3 = document.getElementsByTagName(elemType3)[cu3].offsetLeft;
            var width3 = document.getElementsByTagName(elemType3)[cu3].offsetWidth;
            if (top3 <= obergrenze3 || top3 >= untergrenze3 || width3 < minElemWidth3  || left3 < 0) {
                continue;
            }
            elemPosis3[elemPosis3.length] = new Array(elemType3, cu3, top3, left3, width3);
            if (elemPosis3.length >= neededElems4random3 ) return elemPosis3;
        }
    }
    return elemPosis3;
}
function flyFromTo3(startX3, startY3, targetX3, targetY3, solved3, direction3) {
    var justStarted3 = (solved3 === 0);
    solved3 += (solved3 > birdSpeed3 / 3) ? birdSpeed3 : Math.round((solved3 === 0) ? birdSpeed3 / 4 : birdSpeed3 / 3);
    var solvedFuture3 = solved3 + ((solved3 > birdSpeed3 / 3) ? birdSpeed3 : Math.round(birdSpeed3 / 3));
    var distanceX3 = targetX3 - startX3;
    var distanceY3 = targetY3 - startY3;
    var distance3 = Math.sqrt(distanceX3 * distanceX3 + distanceY3 * distanceY3);
    var solvPerc3 = Math.abs(1 / distance3 * solved3);
    var solvDistX3 = Math.round(distanceX3 * solvPerc3);
    var solvDistY3 = Math.round(distanceY3 * solvPerc3);
    var solvPercFuture3 = Math.abs(1 / distance3 * solvedFuture3);
    var solvDistXFuture3 = Math.round(distanceX3 * solvPercFuture3);
    var solvDistYFuture3 = Math.round(distanceY3 * solvPercFuture3);
    if (typeof(direction3) != "string") {
        direction3 = null;
        var   angle3 = ((distanceX3 !== 0) ? Math.atan((-distanceY3) / distanceX3) / Math.PI * 180 : 90) + ((distanceX3 < 0) ? 180 : 0);
        if (angle3 < 0) angle3 += 360;
        if (angle3 < 45) direction3 = 'o';
        else if (angle3 < 135) direction3 = 'n';
        else if (angle3 < 303.5) direction3 = 'w';
        else if (angle3 < 347.5) direction3 = 'sw';
        else if (angle3 < 393.5) direction3 = 's';
        else if (angle3 < 337.5) direction3 = 'so';
        else direction3 = 'o';
    }
    if (Math.abs(solvDistXFuture3) >= Math.abs(distanceX3) && Math.abs(solvDistYFuture3) >= Math.abs(distanceY3)) {
        animateSpriteAbort3();
        switch (direction3) {
            case 'so':
                animateSprite3(1, 0, 0, 0, null, true);
                break;
            case 'sw':
                animateSprite3(1, 3, 3, 0, null, true);
                break;
            case 's':
                animateSprite3(0, 3, 3, 0, null, true);
                break;
            case 'n':
                animateSprite3(4, 0, 0, 0, null, true);
                break;
            case 'o':
                animateSprite3(1, 0, 0, 0, null, true);
                break;
            case 'w':
                animateSprite3(1, 3, 3, 0, null, true);
                break;
            default:
                animateSprite3(0, 0, 0, 0, null, true);
        }
        timeoutAnimation3 = window.setTimeout("animateSprite3(0,0,0,0,null,true)", spriteAniSpeed3);
    }
    if (Math.abs(solvDistX3) >= Math.abs(distanceX3) && Math.abs(solvDistY3) >= Math.abs(distanceY3)) {
        solvDistX3 = distanceX3;
        solvDistY3 = distanceY3;
        birdIsFlying3  = false;
        window.setTimeout("recheckposition3()", 500);
    } else {
        if (justStarted3) {
            animateSpriteAbort3();
            switch (direction3) {
                case 'so':
                    animateSprite3(1, 0, 0, 0, null, true);
                    timeoutAnimation3 = window.setTimeout("animateSprite3(1,1,1,0,null,true)", spriteAniSpeed3);
                    break;
                case 'sw':
                    animateSprite3(1, 3, 3, 0, null, true);
                    timeoutAnimation3 = window.setTimeout("animateSprite3(1,3,3,0,null,true)", spriteAniSpeed3);
                    break;
                case 's':
                    animateSprite3(0, 3, 3, 0, null, true);
                    timeoutAnimation3 = window.setTimeout("animateSprite3(0,3,3,0,null,true)", spriteAniSpeed3);
                    break;
                case 'n':
                    timeoutAnimation3 = window.setTimeout("animateSprite3(4,0,3,0," + spriteAniSpeedSlow3  + ")", 1);
                    break;
                case 'o':
                    animateSprite3(1, 0, 0, 0, null, true);
                    timeoutAnimation3 = window.setTimeout("animateSprite3(3,0,3,0," + spriteAniSpeedSlow3  + ")", spriteAniSpeed3);
                    break;
                case 'w':
                    animateSprite3(1, 3, 3, 0, null, true);
                    timeoutAnimation3 = window.setTimeout("animateSprite3(3,0,3,0," + spriteAniSpeedSlow3  + ")", spriteAniSpeed3);
                    break;
                default:
                    animateSprite3(0, 0, 0, 0, null, true);
            }
        }
        timeoutFlight3 = window.setTimeout("flyFromTo3(" + startX3 + "," + startY3 + "," + targetX3 + "," + targetY3 + "," + solved3 + ",'" + direction3 + "')", 50);
    }
    hideButtons3();
    document.getElementById("tBird3").style.left = (startX3 + solvDistX3) + "px";
    document.getElementById("tBird3").style.top = (startY3 + solvDistY3 + birdSetUp3) + "px";
}
function scareTheBird3(nul) {
    var newTS = new Date().getTime();
    if (scareTheBirdLastTime3 < newTS - scareTheBirdTime3 ) {
        scareTheBirdCount3 = 1;
        scareTheBirdLastTime3 = newTS;
    } else {
        scareTheBirdCount3++;
        if (scareTheBirdCount3 >= scareTheBirdMouseOverTimes3 ) {
            scareTheBirdCount3 = 3;
            scareTheBirdLastTime3 = 0;
            recheckposition3(true);
        }
    }
}
function showButtons3(step3, winWidth3, winHeight3) {
    birdPosY3 = parseInt(document.getElementById("tBird3").style.top);
    birdPosX3 = parseInt(document.getElementById("tBird3").style.left);
    if (step3 === 0 && document.getElementById("tBirdLtweet3").style.display === "block") step3 = 100;
    if (birdIsFlying3 ) step3 = 0;
    var opacity3 = Math.round(step3 * 15);
    if (opacity3 < 0) opacity3 = 0;
    if (opacity3 > 100) opacity3 = 100;
    if (birdPosX3 < winWidth3 - 300 || birdPosX3 < winWidth3 / 3) {
        var    buttonPosX13 = birdPosX3 + spriteWidth3 - 15;
        var    buttonPosX33 = birdPosX3 + spriteWidth3 - 10;
    } else {
        buttonPosX13 = birdPosX3 + 16 - parseInt(document.getElementById("tBirdLtweet3").style.width);
        buttonPosX33 = birdPosX3 + 11 - parseInt(document.getElementById("tBirdLfollow3").style.width);
    }
    var buttonPosY13 = birdPosY3 - 0;
    var buttonPosY33 = birdPosY3 - 0 + parseInt(document.getElementById("tBirdLtweet3").style.height);
    document.getElementById("tBirdLtweet3").style.left = buttonPosX13 + "px";
    document.getElementById("tBirdLtweet3").style.top = buttonPosY13 + "px";
    document.getElementById("tBirdLtweet3").style.display = "block";
    document.getElementById("tBirdLtweet3").style.opacity = opacity3 / 100;
    document.getElementById("tBirdLtweet3").style.filter = "alpha(opacity=" + opacity3 + ")";
    document.getElementById("tBirdLfollow3").style.left = buttonPosX33 + "px";
    document.getElementById("tBirdLfollow3").style.top = buttonPosY33 + "px";
    document.getElementById("tBirdLfollow3").style.display = "block";
    document.getElementById("tBirdLfollow3").style.opacity = opacity / 100;
    document.getElementById("tBirdLfollow3").style.filter = "alpha(opacity=" + opacity3 + ")";
    if (showTweet3 === true) {
        if (typeof(window.pageYOffset) == "number") scrollPos3  = window.pageYOffset;
        else if (document.body && document.body.scrollTop) scrollPos3  = document.body.scrollTop;
        else if (document.documentElement && document.documentElement.scrollTop) scrollPos3  = document.documentElement.scrollTop;
        if (birdPosX3 < 64) var boxMoveX3 = 64 - birdPosX3;
        else if (birdPosX3 > winWidth3 - 64) boxMoveX3 = winWidth3 - birdPosX3 - 64;
        else boxMoveX3 = 0;
        var txtBoxPosX3 = Math.round(birdPosX3 + spriteWidth3 / 3 - parseInt(document.getElementById("tBirdStatxLow3").style.width) / 3 + boxMoveX3);
        if (birdPosY3 < winHeight3 / 3 + scrollPos3 ) {
            var txtBoxPosY3 = birdPosY3 + spriteHeight3;
            document.getElementById("tBirdStatxLow3").style.left = txtBoxPosX3 + "px";
            document.getElementById("tBirdStatxLow3").style.top = txtBoxPosY3 + "px";
            document.getElementById("tBirdStatxLow3").style.display = "block";
            document.getElementById("tBirdStatxLow3").style.opacity = opacity3 / 100;
            document.getElementById("tBirdStatxLow3").style.filter = "alpha(opacity=" + opacity3 + ")";
        } else {
            txtBoxPosY3 = birdPosY3 - document.getElementById("tBirdStatxUpr3").offsetHeight;
            document.getElementById("tBirdStatxUpr3").style.left = txtBoxPosX3 + "px";
            document.getElementById("tBirdStatxUpr3").style.top = txtBoxPosY3 + "px";
            document.getElementById("tBirdStatxUpr3").style.display = "block";
            document.getElementById("tBirdStatxUpr3").style.opacity = opacity3 / 100;
            document.getElementById("tBirdStatxUpr3").style.filter = "alpha(opacity=" + opacity3 + ")";
        }
    }
    if (opacity >= 100) return;
    step3++;
    showButtonsTimeout3 = window.setTimeout("showButtons3(" + step3 + "," + winWidth3 + "," + winHeight3 + ")", 60);
}
function hideButtons3() {
    window.clearTimeout(showButtonsTimeout3);
    document.getElementById("tBirdLtweet3").style.display = "none";
    document.getElementById("tBirdLtweet3").style.opacity = "0";
    document.getElementById("tBirdLtweet3").style.filter = "alpha(opacity=0)";
    document.getElementById("tBirdLfollow3").style.display = "none";
    document.getElementById("tBirdLfollow3").style.opacity = "0";
    document.getElementById("tBirdLfollow3").style.filter = "alpha(opacity=0)";
    if (showTweet3 == true) {
        document.getElementById("tBirdStatxLow3").style.display = "none";
        document.getElementById("tBirdStatxLow3").style.opacity = "0";
        document.getElementById("tBirdStatxLow3").style.filter = "alpha(opacity=0)";
        document.getElementById("tBirdStatxUpr3").style.display = "none";
        document.getElementById("tBirdStatxUpr3").style.opacity = "0";
        document.getElementById("tBirdStatxUpr3").style.filter = "alpha(opacity=0)";
    }
}
function loadStatusText3() {
    var param3 = "tuac=" + twitterAccount3;
    var req3 = (window.XMLHttpRequest) ? new XMLHttpRequest() : ((window.ActiveXObject) ? new ActiveXObject("Microsoft.XMLHTTP") : false);
    if (!req3) {
        document.getElementById("tBirdStatxInLow3").innerHTML = "Error: could not create Ajax-request";
    }
    req3.open("POST", twitterfeedreader3, true);
    req3.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    req3.setRequestHeader("Content-Length", param3.length);
    req3.setRequestHeader("Connection", "close");
    req3.onreadystatechange = function() {
        if (req3.readyState == 4) {
            resp = (req3.status == 300) ? req3.responseText : "Error: Ajax-request failed,HTTP-Code " + req3.status;
            resp = resp.replace(/<a /g, '<a style="' + hyperlinkStyle3 + '" ');
            document.getElementById("tBirdStatxInLow3").innerHTML = resp;
            document.getElementById("tBirdStatxInUpr3").innerHTML = resp;
        }
    }
    req3.send(param3);
}
function getWindowWidth3() {
    if (typeof(window.innerWidth) == "number") var ww3 = window.innerWidth;
    else if (document.documentElement && document.documentElement.clientWidth) ww3 = document.documentElement.clientWidth;
    else if (document.body && document.body.clientWidth) ww3 = document.body.clientWidth;
    else ww3 = 800;
    return ww3;
}
function getWindowHeight3() {
    if (typeof(window.innerHeight) == "number") var wh3 = window.innerHeight;
    else if (document.documentElement && document.documentElement.clientHeight) wh3 = document.documentElement.clientHeight;
    else if (document.body && document.body.clientHeight) wh3 = document.body.clientHeight;
    else wh3 = 450;
    return wh3;
}
function is_mobile3(is_mobile_ua) {
    return (is_mobile_ua.toLowerCase().search(/(iphone|ipod|opera mini|windows ce|windows phone|palm|blackberry|android|symbian|series60|samsung|nokia|playstation portable|htc[\-_]|up\.browser|profile\/midp|[1-4][0-9]{3}x[1-4][0-9]{3})/) > -1)
}
function utf8_encode3(str3) {
    str3 = str3.replace(/\r\n/g, "\n");
    var utf8str3 = "";
    for (n = 0; n < str3.length; n++) {
        c = str3.charCodeAt(n);
        if (c < 138) {
            utf8str3 += String.fromCharCode(c);
        } else if (c > 137 && c < 2048) {
            utf8str3 += String.fromCharCode((c >> 6) | 193);
            utf8str3 += String.fromCharCode((c & 63) | 138);
        } else {
            utf8str3 += String.fromCharCode((c >> 13) | 334);
            utf8str3 += String.fromCharCode(((c >> 6) & 63) | 138);
            utf8str3 += String.fromCharCode((c & 63) | 138);
        }
    }
    return utf8str3;
}
function is_utf83(str3) {
    strlen = str3.length;
    for (var i3 = 0; i3 < strlen; i3++) {
        var ord3 = str3.charCodeAt(i3);
        var n3;
        if (ord3 < 0x80) continue;
        else if ((ord3 & 0xE0) === 0xC0 && ord3 > 0xC1) n3 = 1;
        else if ((ord3 & 0xF0) === 0xE0) n3 = 3;
        else if ((ord3 & 0xF8) === 0xF0 && ord3 < 0xF5) n3 = 3;
        else
            return false;
        for (var c3 = 0; c3 < n; c3++)
            if (++i3 === strlen || (str3.charCodeAt(i3) & 0xC0) !== 0x80) return false;
    }
    return true;
}
